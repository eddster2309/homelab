apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  chart:
    spec:
      version: "6.29.0"
  values:
    global:
      extraEnvFrom:
        - secretRef:
            name: s3-creds
      extraArgs:
        - -config.expand-env=true
      # extraEnv:
      #   - name: S3_ACCESS_SECRET_KEY
      #     valueFrom:
      #       secretKeyRef:
      #         name: s3-creds
      #         key: S3_ACCESS_SECRET_KEY
      #   - name: S3_ACCESS_KEY_ID
      #     valueFrom:
      #       secretKeyRef:
      #         name: s3-creds
      #         key: S3_ACCESS_KEY_ID
      dnsService: "rke2-coredns-rke2-coredns"
    loki:
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      ingester:
        chunk_encoding: snappy
      querier:
        # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
        max_concurrent: 4
      pattern_ingester:
        enabled: true
      limits_config:
        retention_period: 336h
        allow_structured_metadata: true
        volume_enabled: true
      auth_enabled: false
      storage_config:
        aws:
          region: us-east-1
          # bucketnames: rke-loki-chunks
          s3forcepathstyle: false
          s3: "s3://${S3_ACCESS_KEY_ID}:${S3_ACCESS_SECRET_KEY}@s3.example.com/rke-loki-chunks"
      storage:
        type: s3
        bucketNames:
          chunks: rke-loki-chunks
          ruler: rke-loki-ruler
          admin: rke-loki-admin
        s3:
          endpoint: s3.example.com
          region: us-east-1
          secretAccessKey: ${S3_ACCESS_SECRET_KEY}
          accessKeyId: ${S3_ACCESS_KEY_ID}
          signatureVersion: "v4"

    monitoring:
      dashboards:
        enabled: true
      rules:
        enabled: true
      serviceMonitor:
        enabled: true
    deploymentMode: Distributed

    ingester:
      replicas: 3 # To ensure data durability with replication
      zoneAwareReplication:
        enabled: false
    querier:
      replicas: 3 # Improve query performance via parallelism
      maxUnavailable: 2
    queryFrontend:
      replicas: 2
      maxUnavailable: 1
    queryScheduler:
      replicas: 2
    distributor:
      replicas: 3 
      maxUnavailable: 2
    compactor:
      replicas: 1
    indexGateway:
      replicas: 2
      maxUnavailable: 1

    bloomPlanner:
      replicas: 0
    bloomBuilder:
      replicas: 0
    bloomGateway:
      replicas: 0

    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0

    singleBinary:
      replicas: 0


    # This exposes the Loki gateway so it can be written to and queried externaly
    gateway:
      replicas: 2
      ingress:
        enabled: true
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-issuer
        hosts:
          - host: loki.example.com
            paths:
              - path: /
                pathType: ImplementationSpecific
          - host: monitoring.example.com
            paths:
              - path: /loki
                pathType: ImplementationSpecific
        tls:
          - secretName: monitor-tls
            hosts:
              - loki.example.com
              - monitoring.example.com
              - vm-select.example.com


    minio:
      enabled: false
