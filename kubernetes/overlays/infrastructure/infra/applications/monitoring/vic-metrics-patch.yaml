apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vicmetrics
  namespace: monitoring
spec:
  chart:
    spec:
      version: "0.52.0"
  values:
    defaultDashboards:
      enabled: true
      defaultTimzezone: "Australia/Sydney"
    vmsingle:
      enabled: false
    vmcluster:
      enabled: true
      spec:
        vmstorage:
          storage:
            volumeClaimTemplate:
              spec:
                resources:
                  requests:
                    storage: 80Gi
      ingress:
        insert:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-issuer
          hosts:
            - vm-insert.example.com
            - monitoring.example.com
          path: /insert
          tls:
            - secretName: monitor-tls
              hosts:
                - loki.example.com
                - monitoring.example.com
                - vm-select.example.com
    vmagent:
      enabled: true
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-issuer
          nginx.ingress.kubernetes.io/auth-method: 'GET'
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.example.com?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.authelia.svc.cluster.local/api/authz/auth-request"
        hosts:
          - vm-agent.example.com
        tls:
          - secretName: vm-agent-tls
            hosts:
              - vm-agent.example.com
    victoria-metrics-operator:
      operator:
        disable_prometheus_converter: true
    grafana:
      enabled: true
      replicas: 1

      persistence:
        enabled: true
        size: 10Gi
      plugins:
        - victoriametrics-logs-datasource
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          searchNamespace: ALL
        datasources:
          enabled: true
          label: grafana_datasource
          searchNamespace: ALL
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-issuer
          nginx.ingress.kubernetes.io/auth-method: 'GET'
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.example.com?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.authelia.svc.cluster.local/api/authz/auth-request"
        hosts:
          - grafana.example.com
        tls:
          - secretName: grafana-ingress-tlsa
            hosts:
              - grafana.example.com
      env:
        GF_AUTH_GENERIC_OAUTH_ENABLED: true
        GF_AUTH_GENERIC_OAUTH_NAME: "Eddster Auth"
        GF_AUTH_GENERIC_OAUTH_ICON: signin
        GF_AUTH_OAUTH_AUTO_LOGIN: true
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'k8s-grafana-viewer') && 'Viewer' || contains(groups[*], 'k8s-grafana-admin') && 'Admin' || contains(groups[*], 'k8s-grafana-editor') && 'Editor' || contains(groups[*], 'k8s-grafana-global-admin') && 'GrafanaAdmin'"
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_STRICT: true
        GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN: true
        GF_AUTH_OAUTH_ALLOW_INSECURE_EMAIL_LOOKUP: true
        GF_SERVER_ROOT_URL: "https://grafana.example.com"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid email profile groups"
        GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES: false
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.example.com/api/oidc/authorization
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.example.com/api/oidc/token
        GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.example.com/api/oidc/userinfo
        GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: preferred_username
        GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: groups
        GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: name
        GF_AUTH_GENERIC_OAUTH_USE_PKCE: true
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
        GF_ANALYTICS_ENABLED: false
        GF_ANALYTICS_REPORTING_ENABLED: false
        GF_FEEDBACK_LINKS_ENABLED: false
        GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
        GF_SNAPSHOTS_ENABLED: false
        GF_AUTH_DISABLE_LOGIN_FORM: true
        GF_DISABLE_SIGNOUT_MENU: true
        GF_HELP_ENABLED: false
        GF_NEWS_NEWS_FEED_ENABLED: false
        GF_DATE_FORMATS_DEFAULT_TIMEZONE: "Australia/Sydney"
        GF_PUBLIC_DASHBOARDS_ENABLED: false
        GF_FEATURE_TOGGLES_FEATURE_DASHGPT: false
        GF_FEATURE_TOGGLES_FEATURE_ONPREMTOCLOUDMIGRATIONS: false

      
      envFromSecret: auth-secret
    prometheus-node-exporter:
      enabled: false
